const send = require("../../message_sending");
const death = require("../../game_core/death");
const Villageois = require("../baseRole").Villageois;
let RichEmbed = require('discord.js').RichEmbed;

class Sorciere extends Villageois {

    constructor(guildMember) {
        super(guildMember);

        this.role = "Sorciere";

        this.potions = {vie: 1, poison: 1};

        return this;
    }

}

/**
 * First Night
 - Vous devez lui envoyer un MP afin de l'avertir que c'est √† son tour d'entrer en sc√®ne ; ici , deux cas sont possibles :
 -- Il n'y a pas eu de victime cette nuit, ( dans le cas o√π le salvateur a sauv√© la victime pr√©vue par les Loups) ; dans ce cas la sorci√®re ne sait PAS qui est la victime sauv√©e, et elle ne peut utiliser que sa potion de poison. Mais elle n'est bien sur pas oblig√©e de l'utiliser imm√©diatement, et peut attendre afin de tuer plus efficacement.
 -- Les Loups-Garous ont r√©ussi √† tuer quelqu'un cette nuit ; dans ce cas vous annoncez son nom √† la sorci√®re, qui d√©cidera ou non de la soigner avec la potion de soin, et qui d√©cidera ou non d'en achever une avec son poison

 - Elle poss√®de deux potions : une de gu√©rison et une d'empoisonnement. Elle ne peut utiliser chacune de ses potions
 qu'une seule fois au cours de la partie. Durant la nuit, lorsque les loups-garous se sont rendormis, le meneur de
 jeu va appeler la sorci√®re et va lui montrer la personne tu√©e par les loups-garous de cette nuit.

 - La sorci√®re a trois possibilit√©s :

 -- ne rien faire
 -- ressusciter la personne tu√©e ‚Äî et donc perdre sa potion de gu√©rison ;
 -- tuer une autre personne en plus de la victime ‚Äî et donc perdre sa potion d'empoisonnement.
 -- La sorci√®re peut utiliser ses deux potions durant la m√™me nuit si elle le souhaite.

 - La sorci√®re peut se ressusciter elle-m√™me, si elle a √©t√© la victime des loups-garous. La sorci√®re n'op√®re que durant
 la nuit, elle ne peut donc pas tuer ou ressusciter quelqu'un durant le jour. De plus, si la sorci√®re a utilis√© sa
 potion de gu√©rison auparavant, le meneur de jeu ne lui d√©signe plus la victime des loups-garous mais doit continuer
 √† dire √† haute voix la phrase "je montre √† la sorci√®re la victime des loups-garous" afin d'entretenir le doute sur
 l'utilisation des potions. De cette mani√®re, elle peut utiliser sa potion d'empoisonnement sur cette m√™me personne
 (la potion sera sans effet, mais tout de m√™me perdue)

 * @param client
 * @param message
 */
let sorciere = (client, message) => new Promise((resolve, reject) => {

    const lg_functions = require('../../lg_functions.js');
    const lg_var = require('../../lg_var.js');
    let g_set = client.guilds_settings.get(message.guild.id);
    let msgSorciere = new RichEmbed().setColor(lg_var.bot_color).setAuthor("Sorci√®re", lg_var.roles_img.Sorciere);

    if (g_set.LG.role_players_id.Sorciere.length === 0) {
        console.log('No witch, moving forward');
        death.print_supposed_deaths(client, message);
        resolve(null);
        return;
    }

    send.message_to_village(client, message, "La **Sorci√®re** se r√©veille.").catch(err => reject(err));

    let sorciere_id = g_set.LG.role_players_id.Sorciere[lg_functions.get_random_index(g_set.LG.role_players_id.Sorciere)];
    let sorciere = g_set.LG.players[sorciere_id];

    sorciere.member_object.createDM().then(chan => {

        let lg_choice = g_set.LG.players[g_set.LG.vote_data.result];

        let emojis = [];

        if (sorciere.potions.poison === 0 && sorciere.potions.vie === 0) {

            chan.send(new RichEmbed().setAuthor("Sorci√®re", lg_var.roles_img.Sorciere).setColor(lg_var.bot_color)
                .addField("Plus de potions", "Votre tour est termin√©"))
                .catch(err => reject(err));
            resolve(null);
            return;
        }

        let sorciere_msg = new RichEmbed().setColor(lg_var.bot_color).setAuthor("Sorci√®re", lg_var.roles_img.Sorciere);

        // Salvateur saved the victim
        if (lg_choice.immunity) {

            let description_msg = "La cible des loups garous a √©t√© sauv√©e par le salvateur.\n";

            // Poison or nothing
            if (sorciere.potions.poison === 1) {
                description_msg += "Tu as donc le choix de ne rien faire, ou bien d'utiliser ton poison sur une personne de ton choix.";
                sorciere_msg.addField(':atom:', "Utiliser le poison sur une personne");
                emojis.push("‚öõ");
            } else {
                description_msg += "Tu n'as plus de potion de poison, tu ne peux donc que passer ton tour.";
            }

            sorciere_msg.setDescription(description_msg);
            sorciere_msg.addField(':end:', "Passer son tour");
            emojis.push("üîö");

        } else {
            // Salvateur didn't save the victim

            sorciere_msg.setAuthor(lg_choice.display_name, lg_choice.member_object.user.avatarURL);
            let description_msg = "Les loups-garous ont cibl√©s une personne.\n";

            if (sorciere.potions.vie === 1) {
                description_msg += "Tu peux utiliser ta potion de vie pour sauver la victime.";
                sorciere_msg.addField(":sparkle:", "Utiliser la potion de vie");
                emojis.push("‚ùá");
            }
            if (sorciere.potions.poison === 1) {
                description_msg += " Tu peux aussi utiliser ta potion de poison sur quelqu'un.";
                sorciere_msg.addField(":atom:", "Utiliser le poison sur une autre personne");
                emojis.push("‚öõ");
            }
            sorciere_msg.setDescription(description_msg);
            sorciere_msg.addField(':end:', "Passer son tour");
            emojis.push("üîö");

        }

        chan.send(sorciere_msg).then(msg => {

            async function add_reactions(message_content) {
                let i = 0;

                while (i < emojis.length) {
                    await message_content.react(emojis[i]);
                    i += 1;
                }
            }

            add_reactions(msg).catch(err => reject(err));

            const sorciereTurn = msg.createReactionCollector(m => m.author.id !== m.guild.me.id);

            let msgSave = undefined;
            let msgSave2 = undefined;
            sorciereTurn.on('collect', reaction => {

                if (reaction.emoji.name === 'end' && reaction.count === 2) {

                    sorciereTurn.stop();

                } else if (reaction.emoji.name === 'atom' && reaction.count === 2) {

                    if (msgSave2 === undefined) {
                        let playerList = lg_functions.get_player_list(client, message, [lg_choice.id]);

                        msgSave2 = chan.send(Object.assign({}, msgSorciere)
                            .addField("Exemple pour choisir une cible", "vote 1")
                            .addField("Joueurs", playerList.string))
                            .catch(console.error);

                        const sorciereChanMsgColl = chan.createMessageCollector(m => m.author.id !== m.guild.me.id);

                        let errorMsg = undefined;

                        const displayErrMsg = () => {
                            errorMsg = chan.send(Object.assign({}, msgSorciere)
                                .addField("Erreur", "Veuillez entrer une commande valide."))
                                .catch(console.error);
                            return errorMsg;
                        };

                        sorciereChanMsgColl.on('collect', msgCollected => {
                            const poisonTargetMsg = msgCollected.trim().toLowerCase().split("/ +/g");

                            if (poisonTargetMsg[0] === "vote" && poisonTargetMsg.length === 2) {
                                let choice = parseInt(poisonTargetMsg[1]);

                                if (isNaN(choice) && choice >= 1 && choice <= playerList.array.length) {

                                    let choiceId = playerList.array[choice - 1];
                                    g_set.LG.DEATHS_ID.push(choiceId);

                                    chan.send(Object.assign({}, msgSorciere)
                                        .setDescription(`Poison utilis√© sur ${g_set.LG.players[choiceId].display_name}`))
                                        .catch(console.error);

                                    sorciere.potions.poison -= 1;

                                    if (sorciere.potions.vie === 0) {
                                        sorciereTurn.stop();
                                    }

                                } else {
                                    if (errorMsg === undefined) {
                                        displayErrMsg().catch(console.error);
                                    }
                                }
                            } else {
                                if (errorMsg === undefined) {
                                    displayErrMsg().catch(console.error);
                                }
                            }

                        });

                        sorciereChanMsgColl.on('end', () => {
                            if (sorciere.potions.vie === 0) {
                                sorciereTurn.stop();
                            }
                        });
                    }

                } else if (reaction.emoji.name === 'sparkle' && reaction.count === 2) {

                    if (sorciere.potions.vie > 0) {
                        g_set.LG.DEATHS_ID.splice(g_set.LG.DEATHS_ID.indexOf(lg_choice.id), 1);

                        chan.send(new RichEmbed().setColor(lg_var.bot_color)
                            .setAuthor("Sorci√®re", lg_var.roles_img.Sorciere)
                            .addField("Victime sauv√©e", `Potion de vie utilis√©e sur ${lg_choice.display_name}.`))
                            .catch(console.error);

                        sorciere.potions.vie -= 1;

                        if (sorciere.potions.poison === 0) {
                            sorciereTurn.stop();
                        }

                    } else {
                        if (msgSave === undefined) {
                            msgSave = chan.send(Object.assign({}, msgSorciere)
                                .addField("Erreur", "Plus de potion de vie")).catch(console.error);
                        }
                    }

                }

            });

            sorciereTurn.on('end', () => {
                send.message_to_village(client, message, "La **Sorci√®re** se rendort.").catch(err => reject(err));
                resolve(null);
            })

        }).catch(err => reject(err));

    }).catch(err => reject(err));

});

module.exports = {Sorciere,

    sorciere

};
